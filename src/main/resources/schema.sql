-- TABLES CREATION
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------

-- USERS

CREATE TABLE USERS (
    ID NUMBER PRIMARY KEY,
    FULLNAME VARCHAR2(255) NOT NULL,
    USERNAME VARCHAR2(255) NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    SALT VARCHAR2(255) NOT NULL,
    ROLE VARCHAR2(20) NOT NULL,
    CONSTRAINT CHECK_ROLE_VALUE CHECK (ROLE IN ('EMPLOYEE', 'IT_SUPPORT')),
    CONSTRAINT UQ_USERNAME UNIQUE ("USERNAME")
);

CREATE SEQUENCE USERS_SEQUENCE START WITH 1 INCREMENT BY 1;

--------------------------------------------------------
--  DDL for Table TICKETS
--------------------------------------------------------

-- TICKETS

CREATE TABLE TICKETS (
    ID NUMBER PRIMARY KEY,
    TITLE VARCHAR2(255) NOT NULL,
    DESCRIPTION VARCHAR2(255),
    CREATION_DATE TIMESTAMP,
    PRIORITY VARCHAR2(255) DEFAULT 'LOW',
    CATEGORY VARCHAR2(255) NOT NULL,
    STATUS VARCHAR2(30) DEFAULT 'NEW',
    EMPLOYEE_ID NUMBER NOT NULL,
    USER_ID NUMBER,
    CONSTRAINT CHECK_STATUS_VALUE CHECK (STATUS IN ('NEW', 'IN_PROGRESS', 'RESOLVED')),
    CONSTRAINT CHECK_PRIORITY_VALUE CHECK (PRIORITY IN ('LOW', 'MEDIUM', 'HIGH')),
    CONSTRAINT CHECK_CATEGORY_VALUE CHECK (CATEGORY IN ('NETWORK', 'HARDWARE', 'SOFTWARE', 'OTHER')),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES USERS(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE SEQUENCE TICKETS_SEQUENCE START WITH 1 INCREMENT BY 1;

--------------------------------------------------------
--  DDL for Table COMMENTS
--------------------------------------------------------

-- COMMENTS

CREATE TABLE COMMENTS (
    ID NUMBER PRIMARY KEY,
    COMMENT_VALUE CLOB NOT NULL,
    CREATION_DATE TIMESTAMP,
    TICKET_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE SEQUENCE COMMENTS_SEQUENCE START WITH 1 INCREMENT BY 1;

--------------------------------------------------------
--  DDL for Table AUDIT_LOG
--------------------------------------------------------

-- AUDIT_LOG
CREATE TABLE AUDIT_LOGS (
    ID NUMBER PRIMARY KEY,
    ACTION VARCHAR2(255),
    CREATION_DATE TIMESTAMP ,
    TICKET_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE SEQUENCE AUDIT_LOGS_SEQUENCE START WITH 1 INCREMENT BY 1;
